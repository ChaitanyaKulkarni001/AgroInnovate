<<<<<<< HEAD
# Generated by Django 5.2 on 2025-04-21 14:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.conf import settings
from django.db import migrations, models
=======
# Generated by Django 4.2.11 on 2024-03-13 13:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
>>>>>>> 53002ccdf3a83398f8489f1421618a266daa60c2


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< HEAD
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
=======
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
>>>>>>> 53002ccdf3a83398f8489f1421618a266daa60c2
    ]

    operations = [
        migrations.CreateModel(
<<<<<<< HEAD
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('farmer', 'Farmer'), ('customer', 'Customer')], max_length=10)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10)),
                ('address_line', models.TextField(blank=True)),
                ('udf1', models.CharField(blank=True, max_length=100, null=True)),
                ('udf2', models.CharField(blank=True, max_length=100, null=True)),
                ('udf3', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.country')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FarmerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_name', models.CharField(max_length=255)),
                ('farm_size', models.DecimalField(decimal_places=2, max_digits=10)),
                ('farm_type', models.CharField(choices=[('Organic', 'Organic'), ('Conventional', 'Conventional')], max_length=20)),
                ('experience_years', models.PositiveIntegerField()),
                ('business_registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_account_number', models.CharField(max_length=20)),
                ('ifsc_code', models.CharField(max_length=11)),
                ('upi_id', models.CharField(blank=True, max_length=50, null=True)),
                ('id_proof', models.FileField(upload_to='documents/id_proofs/')),
                ('ownership_proof', models.FileField(upload_to='documents/ownership_proofs/')),
                ('is_verified', models.BooleanField(default=False)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('billing_id', models.CharField(default='', editable=False, max_length=20, unique=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FarmerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer', models.CharField(max_length=100)),
                ('rating', models.PositiveSmallIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='api.farmerprofile')),
            ],
        ),
        migrations.CreateModel(
=======
>>>>>>> 53002ccdf3a83398f8489f1421618a266daa60c2
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
<<<<<<< HEAD
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('Vegetable', 'Vegetable'), ('Fruit', 'Fruit'), ('Grain', 'Grain'), ('Dairy', 'Dairy'), ('Poultry', 'Poultry'), ('Meat', 'Meat'), ('Herbs', 'Herbs'), ('Honey', 'Honey'), ('Beverage', 'Beverage'), ('Snack', 'Snack'), ('Livestock', 'Livestock'), ('Pet Animal', 'Pet Animal'), ('Farm Tool', 'Farm Tool'), ('Machinery', 'Machinery'), ('Fertilizer', 'Fertilizer'), ('Seed', 'Seed'), ('Handicraft', 'Handicraft'), ('Other', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('original_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discounted_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity_available', models.FloatField()),
                ('unit', models.CharField(choices=[('Kg', 'Kg'), ('Liter', 'Liter'), ('Piece', 'Piece'), ('Dozen', 'Dozen'), ('Quintal', 'Quintal')], max_length=20)),
                ('image1', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('is_available', models.BooleanField(default=True)),
                ('product_expiry', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('udf1', models.CharField(max_length=100, null=True)),
                ('udf2', models.CharField(max_length=100, null=True)),
                ('udf3', models.CharField(max_length=100, null=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='api.farmerprofile')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='api.country')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping_address_line1', models.CharField(max_length=255)),
                ('shipping_address_line2', models.CharField(blank=True, max_length=255)),
                ('shipping_pincode', models.CharField(max_length=10)),
                ('billing_address_line1', models.CharField(blank=True, max_length=255)),
                ('billing_address_line2', models.CharField(blank=True, max_length=255)),
                ('billing_pincode', models.CharField(blank=True, max_length=10)),
                ('loyalty_points', models.PositiveIntegerField(default=0)),
                ('default_payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('udf1', models.CharField(blank=True, max_length=100, null=True)),
                ('udf2', models.CharField(blank=True, max_length=100, null=True)),
                ('udf3', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.city')),
                ('billing_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.country')),
                ('shipping_city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.city')),
                ('shipping_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.country')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to=settings.AUTH_USER_MODEL)),
                ('wishlist', models.ManyToManyField(blank=True, related_name='wishlisted_by', to='api.product')),
                ('billing_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.state')),
                ('shipping_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.state')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='api.state'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.state'),
        ),
=======
>>>>>>> 53002ccdf3a83398f8489f1421618a266daa60c2
    ]
